package com.hqkang.DSMS.Server;


/**
* com/hqkang/DSMS/Server/_ClinicSStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /Users/kanghuaqiang/git/DSMS/DSMS/src/ClinicServer.idl
* Wednesday, June 29, 2016 11:08:18 PM EDT
*/

public class _ClinicSStub extends org.omg.CORBA.portable.ObjectImpl implements com.hqkang.DSMS.Server.ClinicS
{

  public com.hqkang.DSMS.Server.ClinicSPackage.MapItem[] getSrvURLList ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSrvURLList", true);
                $in = _invoke ($out);
                com.hqkang.DSMS.Server.ClinicSPackage.MapItem $result[] = com.hqkang.DSMS.Server.ClinicSPackage.HashmapHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSrvURLList (        );
            } finally {
                _releaseReply ($in);
            }
  } // getSrvURLList

  public com.hqkang.DSMS.Server.ClinicSPackage.MapItem[] getSrvUDPList ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSrvUDPList", true);
                $in = _invoke ($out);
                com.hqkang.DSMS.Server.ClinicSPackage.MapItem $result[] = com.hqkang.DSMS.Server.ClinicSPackage.HashmapHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSrvUDPList (        );
            } finally {
                _releaseReply ($in);
            }
  } // getSrvUDPList

  public String getRecordCounts (String AID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getRecordCounts", true);
                $out.write_string (AID);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getRecordCounts (AID        );
            } finally {
                _releaseReply ($in);
            }
  } // getRecordCounts

  public com.hqkang.DSMS.Server.ClinicSPackage.createRes createRecord (com.hqkang.DSMS.Server.ClinicSPackage.Record r, String AID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createRecord", true);
                com.hqkang.DSMS.Server.ClinicSPackage.RecordHelper.write ($out, r);
                $out.write_string (AID);
                $in = _invoke ($out);
                com.hqkang.DSMS.Server.ClinicSPackage.createRes $result = com.hqkang.DSMS.Server.ClinicSPackage.createResHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createRecord (r, AID        );
            } finally {
                _releaseReply ($in);
            }
  } // createRecord

  public int getSeq ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSeq", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSeq (        );
            } finally {
                _releaseReply ($in);
            }
  } // getSeq

  public boolean check (String key)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("check", true);
                $out.write_string (key);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return check (key        );
            } finally {
                _releaseReply ($in);
            }
  } // check

  public boolean editRecord (String RID, String field, String value, String AID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("editRecord", true);
                $out.write_string (RID);
                $out.write_string (field);
                $out.write_string (value);
                $out.write_string (AID);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return editRecord (RID, field, value, AID        );
            } finally {
                _releaseReply ($in);
            }
  } // editRecord

  public boolean setSeq (int s)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setSeq", true);
                $out.write_long (s);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return setSeq (s        );
            } finally {
                _releaseReply ($in);
            }
  } // setSeq

  public com.hqkang.DSMS.Server.ClinicSPackage.Record select (String RID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("select", true);
                $out.write_string (RID);
                $in = _invoke ($out);
                com.hqkang.DSMS.Server.ClinicSPackage.Record $result = com.hqkang.DSMS.Server.ClinicSPackage.RecordHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return select (RID        );
            } finally {
                _releaseReply ($in);
            }
  } // select

  public boolean remove (String RID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("remove", true);
                $out.write_string (RID);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return remove (RID        );
            } finally {
                _releaseReply ($in);
            }
  } // remove

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:com/hqkang/DSMS/Server/ClinicS:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ClinicSStub
